;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name tripod.router, :imports nil, :requires {path tripod.path, tripod.path tripod.path}, :uses nil, :defs {Router {:meta {:file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :line 4, :column 14, :end-line 4, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {find-route [[this req]]}}}, :protocol-symbol true, :name tripod.router/Router, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :end-column 20, :column 1, :line 4, :protocol-info {:methods {find-route [[this req]]}}, :info nil, :end-line 4, :impls #{tripod.router/t_tripod$router10177 tripod.router/t_tripod$router10183}, :doc nil, :jsdoc ("@interface")}, find-route {:protocol-inline nil, :meta {:file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :line 5, :column 4, :end-line 5, :end-column 14, :protocol tripod.router/Router, :doc nil, :arglists (quote ([this req]))}, :protocol tripod.router/Router, :name tripod.router/find-route, :variadic false, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :end-column 14, :method-params ([this req]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this req])), :doc nil}, path-matcher {:protocol-inline nil, :meta {:file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :line 10, :column 8, :end-line 10, :end-column 20, :private true, :arglists (quote ([{:keys [path-parts], :as route}]))}, :private true, :name tripod.router/path-matcher, :variadic false, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :end-column 20, :method-params ([p__10165]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [path-parts], :as route}]))}, linear-search {:protocol-inline nil, :meta {:file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([routes])), :doc "Given a sequence of routes, return a linear search router.\n  Matches the :uri key inside the request qith the paths in the route table"}, :name tripod.router/linear-search, :variadic false, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :end-column 20, :method-params ([routes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([routes])), :doc "Given a sequence of routes, return a linear search router.\n  Matches the :uri key inside the request qith the paths in the route table"}, t_tripod$router10177 {:num-fields 4, :protocols #{tripod.router/Router cljs.core/IMeta cljs.core/IWithMeta}, :name tripod.router/t_tripod$router10177, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :type true, :anonymous true, :column 5, :line 22, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_tripod$router10177 {:protocol-inline nil, :meta {:anonymous true, :protocols #{tripod.router/Router cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([linear-search routes matcher-routes meta10178])), :file nil}, :protocols #{tripod.router/Router cljs.core/IMeta cljs.core/IWithMeta}, :name tripod.router/->t_tripod$router10177, :variadic false, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :method-params ([linear-search routes matcher-routes meta10178]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 22, :max-fixed-arity 4, :fn-var true, :arglists (quote ([linear-search routes matcher-routes meta10178])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_tripod$router10183 {:num-fields 4, :protocols #{tripod.router/Router cljs.core/IMeta cljs.core/IWithMeta}, :name tripod.router/t_tripod$router10183, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :type true, :anonymous true, :column 5, :line 22, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_tripod$router10183 {:protocol-inline nil, :meta {:anonymous true, :protocols #{tripod.router/Router cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([linear-search routes matcher-routes meta10184])), :file nil}, :protocols #{tripod.router/Router cljs.core/IMeta cljs.core/IWithMeta}, :name tripod.router/->t_tripod$router10183, :variadic false, :file "/Users/frankie/.boot/cache/tmp/Users/frankie/Documents/frankiesardo/tripod/example/web/1qr/-s81pxz/js/app.out/tripod/router.cljc", :method-params ([linear-search routes matcher-routes meta10184]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 22, :max-fixed-arity 4, :fn-var true, :arglists (quote ([linear-search routes matcher-routes meta10184])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{routes :path-parts matcher-routes linear-search meta10184 :uri quote :arglists :path-params :doc :matcher meta10178}, :order [:path-parts :uri :matcher :path-params linear-search :arglists :doc quote routes matcher-routes meta10178 meta10184]}, :doc nil}